<?php
declare(strict_types=1);

namespace App\Console\Commands;

use Illuminate\Console\Command;
use Silber\Bouncer\Database\Ability;

class BuildSchema extends Command
{
    /**
     * The name and signature of the console command.
     *
     * @var string
     */
    protected $signature = 'generate:schema';

    /**
     * The console command description.
     *
     * @var string
     */
    protected $description = 'Export the lighthouse schema files for consumption by the frontend.';

    /**
     * Execute the console command.
     *
     * @return void
     */
    public function handle()
    {
        $this->writeAbilitiesEnum();
        $this->call('lighthouse:print-schema', ['--no-ansi' => true, '--write' => true]);
    }

    /**
     * Write abilities
     *
     * @return void
     */
    protected function writeAbilitiesEnum()
    {
        $abilities = Ability::all()->map(function ($ability) {
            $spec = [];
            $spec[] = $ability->name;
            if ($ability->entity_id) {
                $spec[] = $ability->entity_id;
            }
            if ($ability->entity_type) {
                $spec[] = str_replace('App\\Models\\', '', $ability->entity_type);
            }
            $identifier = implode(':', $spec);

            return "'$identifier'";
        });

        $enum = "// This file is generated by the `generate:schema` artisan command\n\n";
        $enum .= "export {}\nexport type AbilityName = \n";
        $enum .= implode(" |\n", $abilities->toArray());
        $enum .= "\n";

        file_put_contents(base_path('../client/src/graphql/user_abilities.ts'), $enum);
    }
}
