type User {
    id: ID!
    name: String!
    email: String!
    created_at: DateTime!
    updated_at: DateTime!
    roles: [String!]! @method(name: "getRoles")
    abilities: [String!]! @method(name: "getAbilitiesArray")
}

type Role {
    title: String!
    name: String!
}

type Ability {
    title: String!
    name: String!
}

extend type Mutation {
    login(email: String!, password: String!): User!
        @field(resolver: "App\\GraphQL\\Mutations\\Authenticate@login")

    logout: User
        @guard
        @field(resolver: "App\\GraphQL\\Mutations\\Authenticate@logout")
}

extend type Query {
    currentUser: User @auth
    userExists(email: String!): Boolean!
        @field(resolver: "App\\GraphQL\\Queries\\UserUtilities@userExists")
}